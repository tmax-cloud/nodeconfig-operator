
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: nodeconfigs.bootstrap.tmax.io
spec:
  group: bootstrap.tmax.io
  names:
    kind: NodeConfig
    listKind: NodeConfigList
    plural: nodeconfigs
    singular: nodeconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NodeConfig is the Schema for the nodeconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NodeConfigSpec defines the desired state of NodeConfig
            properties:
              cloudInitCommands:
                description: CloudInitCommands specifies extra commands to run after
                  systemd
                items:
                  type: string
                type: array
              files:
                description: Files specifies extra files to be passed to user_data
                  upon creation.
                items:
                  description: File defines the input for generating write_files in
                    cloud-init.
                  properties:
                    content:
                      description: Content is the actual content of the file.
                      type: string
                    encoding:
                      description: Encoding specifies the encoding of the file contents.
                      enum:
                      - base64
                      - gzip
                      - gzip+base64
                      type: string
                    owner:
                      description: Owner specifies the ownership of the file, e.g.
                        "root:root".
                      type: string
                    path:
                      description: Path specifies the full path on disk where to store
                        the file.
                      type: string
                    permissions:
                      description: Permissions specifies the permissions to assign
                        to the file, e.g. "0640".
                      type: string
                  required:
                  - content
                  - path
                  type: object
                type: array
              format:
                description: Format specifies the output format of the bootstrap data
                enum:
                - cloud-config
                type: string
              ntp:
                description: NTP specifies NTP configuration
                properties:
                  enabled:
                    description: Enabled specifies whether NTP should be enabled
                    type: boolean
                  servers:
                    description: Servers specifies which NTP servers to use
                    items:
                      type: string
                    type: array
                type: object
              users:
                description: Users specifies extra users to add
                items:
                  description: User defines the input for a generated user in cloud-init.
                  properties:
                    gecos:
                      description: Gecos specifies the gecos to use for the user
                      type: string
                    groups:
                      description: Groups specifies the additional groups for the
                        user
                      type: string
                    homeDir:
                      description: HomeDir specifies the home directory to use for
                        the user
                      type: string
                    inactive:
                      description: Inactive specifies whether to mark the user as
                        inactive
                      type: boolean
                    lockPassword:
                      description: LockPassword specifies if password login should
                        be disabled
                      type: boolean
                    name:
                      description: Name specifies the user name
                      type: string
                    passwd:
                      description: Passwd specifies a hashed password for the user
                      type: string
                    primaryGroup:
                      description: PrimaryGroup specifies the primary group for the
                        user
                      type: string
                    shell:
                      description: Shell specifies the user's shell
                      type: string
                    sshAuthorizedKeys:
                      description: SSHAuthorizedKeys specifies a list of ssh authorized
                        keys for the user
                      items:
                        type: string
                      type: array
                    sudo:
                      description: Sudo specifies a sudo role for the user
                      type: string
                  required:
                  - name
                  type: object
                type: array
            type: object
          status:
            description: NodeConfigStatus defines the observed state of NodeConfig
            properties:
              bootstrapData:
                description: "BootstrapData will be a cloud-init script for now. \n
                  Deprecated: This field has been deprecated in v1alpha3 and will
                  be removed in a future version. Switch to DataSecretName."
                format: byte
                type: string
              dataSecretName:
                description: DataSecretName is the name of the secret that stores
                  the bootstrap data script.
                type: string
              failureMessage:
                description: "FailureMessage will be set in the event that there is
                  a terminal problem reconciling the metal3machine and will contain
                  a more verbose string suitable for logging and human consumption.
                  \n This field should not be set for transitive errors that a controller
                  faces that are expected to be fixed automatically over time (like
                  service outages), but instead indicate that something is fundamentally
                  wrong with the metal3machine's spec or the configuration of the
                  controller, and that manual intervention is required. Examples of
                  terminal errors would be invalid combinations of settings in the
                  spec, values that are unsupported by the controller, or the responsible
                  controller itself being critically misconfigured. \n Any transient
                  errors that occur during the reconciliation of metal3machines can
                  be added as events to the metal3machine object and/or logged in
                  the controller's output."
                type: string
              failureReason:
                description: FailureReason will be set on non-retryable errors
                type: string
              ready:
                description: Ready indicates the BootstrapData field is ready to be
                  consumed
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
